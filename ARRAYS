Given two arrays and a number x, find the pair whose sum is closest to x and the pair has an element from each array.

Input:
The first line consists of a single integer T, the number of test cases. For each test case, the first line contains 2 integers n & m 
denoting the size of two arrays. Next line contains n- space separated integers denoting the elements of array A and next lines contains m
space separated integers denoting the elements of array B followed by an integer x denoting the number whose closest sum is to find.

Output:
For each test case, the output is 2 space separated integers whose sum is closest to x.  

Constraints:
1<=T<=100
1<=n,m<=50
1<=A[i],B[i]<=500

Example:
Input:
2
4 4
1 4 5 7
10 20 30 40
32
4 4
1 4 5 7
10 20 30 40
50
Output: 
1 30
7 40

import java.io.*;
import java.util.*; 
import java.lang.Math; 

/*package whatever //do not write package name here */
import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) 
	{
	   int x;
	   Scanner sc = new Scanner(System.in);
	   int t = sc.nextInt();
	   while(t!=0)
	   {
	       int m = sc.nextInt();
	       int n = sc.nextInt();
	       int[] a = new int[m];
	       int[] b = new int[n];
	        for(int i=0;i<m;i++)
	           {
	               a[i] = sc.nextInt();
	       
	            }
	  
	        for(int j=0;j<n;j++)
	           {
	               b[j] = sc.nextInt();
	       
	            }
	        Arrays.sort(b);
	        Arrays.sort(a);
	        x = sc.nextInt();
	        int a1=0,a2=n-1;
	        int res_l=0, res_r=0; 
	        int diff=100;
	             
	      while (a2> a1) 
		{ 
			// Check if this pair is closer than the closest pair so far 
			if (Math.abs(a[a1] + b[a2] - x) < diff) 
			{ 
			res_l = a1; 
			res_r = a2; 
			diff = Math.abs(a[a1] + b[a2] - x); 
			} 

			// If this pair has more sum, move to smaller values. 
			if (a[a1] + b[a2] > x) 
			a1--; 
			else // Move to larger values 
			a2++; 
		} 

      	System.out.println(" The closest pair is "+a[res_l]+" and "+ b[res_r]);  
	   
	   }
		
	}
}
